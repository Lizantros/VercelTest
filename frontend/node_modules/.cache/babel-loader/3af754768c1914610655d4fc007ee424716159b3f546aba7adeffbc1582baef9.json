{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d\"@$!%*?&]{8,}$/;\n  if (values.name === \"\") {\n    error.name = \"Le champ ne doit pas être vide\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Le champ ne doit pas être vide\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Le mail ne correspond pas\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Le champ du mot de passe ne doit pas être vide\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"une minuscule / une majuscule / un chiffre / 8 caractères minimum / 1 caractère spécial\";\n  } else {\n    error.password = \"\";\n  }\n  console.log(error);\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","console","log","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/signupValidation.js"],"sourcesContent":["function Validation(values){\n    \n    let error = {\n    }\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d\"@$!%*?&]{8,}$/;\n\n\n\n\n    if(values.name === \"\") {\n        error.name = \"Le champ ne doit pas être vide\"\n    }\n\n    else{\n        error.name= \"\"\n    }\n\n\n    if(values.email === \"\") {\n        error.email = \"Le champ ne doit pas être vide\"\n    }\n\n    else if(!email_pattern.test(values.email)){\n        error.email =\"Le mail ne correspond pas\"\n\n    }else{\n        error.email= \"\"\n\n    }\n\n    if(values.password === \"\"){\n        error.password= \"Le champ du mot de passe ne doit pas être vide\"\n    }\n\n    else if(!password_pattern.test(values.password)){\n        error.password = \"une minuscule / une majuscule / un chiffre / 8 caractères minimum / 1 caractère spécial\"\n    } else {\n        error.password = \"\"\n    }\n    console.log(error);\n    return error;\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EAEvB,IAAIC,KAAK,GAAG,CACZ,CAAC;EACD,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,wDAAwD;EAKjF,IAAGH,MAAM,CAACI,IAAI,KAAK,EAAE,EAAE;IACnBH,KAAK,CAACG,IAAI,GAAG,gCAAgC;EACjD,CAAC,MAEG;IACAH,KAAK,CAACG,IAAI,GAAE,EAAE;EAClB;EAGA,IAAGJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;IACpBJ,KAAK,CAACI,KAAK,GAAG,gCAAgC;EAClD,CAAC,MAEI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IACtCJ,KAAK,CAACI,KAAK,GAAE,2BAA2B;EAE5C,CAAC,MAAI;IACDJ,KAAK,CAACI,KAAK,GAAE,EAAE;EAEnB;EAEA,IAAGL,MAAM,CAACO,QAAQ,KAAK,EAAE,EAAC;IACtBN,KAAK,CAACM,QAAQ,GAAE,gDAAgD;EACpE,CAAC,MAEI,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAC;IAC5CN,KAAK,CAACM,QAAQ,GAAG,yFAAyF;EAC9G,CAAC,MAAM;IACHN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EACAC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EAClB,OAAOA,KAAK;AAChB;AAACS,EAAA,GA1CQX,UAAU;AA4CnB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}