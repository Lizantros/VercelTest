{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d\"@$!%*?&]{8,}$/;\n\n  // Check if the 'name' field is empty\n  if (values.name === \"\") {\n    error.name = \"Le champ ne doit pas être vide\"; // Set an error message if it is empty\n  } else {\n    error.name = \"\"; // Clear the error message if it is not empty\n  }\n\n  // Check if the 'email' field is empty\n  if (values.email === \"\") {\n    error.email = \"Le champ ne doit pas être vide\"; // Set an error message if it is empty\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Le mail ne correspond pas\"; // Set an error message if the email format is invalid\n  } else {\n    error.email = \"\"; // Clear the error message if it is not empty and the format is valid\n  }\n\n  // Check if the 'password' field is empty\n  if (values.password === \"\") {\n    error.password = \"Le champ du mot de passe ne doit pas être vide\"; // Set an error message if it is empty\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"une minuscule / une majuscule / un chiffre / 8 caractères minimum / 1 caractère spécial\"; // Set an error message if the password format is invalid\n  } else {\n    error.password = \"\"; // Clear the error message if it is not empty and the format is valid\n  }\n\n  console.log(error); // Log the error object to the console for debugging purposes\n  return error; // Return the error object\n}\n_c = Validation;\nexport default Validation; // Export the Validation function as the default export of the module\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","console","log","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/signupValidation.js"],"sourcesContent":["function Validation(values){\n    \n    let error = {\n    }\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d\"@$!%*?&]{8,}$/;\n\n    // Check if the 'name' field is empty\n    if(values.name === \"\") {\n        error.name = \"Le champ ne doit pas être vide\" // Set an error message if it is empty\n    } else {\n        error.name= \"\" // Clear the error message if it is not empty\n    }\n\n    // Check if the 'email' field is empty\n    if(values.email === \"\") {\n        error.email = \"Le champ ne doit pas être vide\" // Set an error message if it is empty\n    } else if(!email_pattern.test(values.email)){\n        error.email =\"Le mail ne correspond pas\" // Set an error message if the email format is invalid\n    } else {\n        error.email= \"\" // Clear the error message if it is not empty and the format is valid\n    }\n\n    // Check if the 'password' field is empty\n    if(values.password === \"\"){\n        error.password= \"Le champ du mot de passe ne doit pas être vide\" // Set an error message if it is empty\n    } else if(!password_pattern.test(values.password)){\n        error.password = \"une minuscule / une majuscule / un chiffre / 8 caractères minimum / 1 caractère spécial\" // Set an error message if the password format is invalid\n    } else {\n        error.password = \"\" // Clear the error message if it is not empty and the format is valid\n    }\n    console.log(error); // Log the error object to the console for debugging purposes\n    return error; // Return the error object\n}\n\nexport default Validation; // Export the Validation function as the default export of the module"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EAEvB,IAAIC,KAAK,GAAG,CACZ,CAAC;EACD,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,wDAAwD;;EAEjF;EACA,IAAGH,MAAM,CAACI,IAAI,KAAK,EAAE,EAAE;IACnBH,KAAK,CAACG,IAAI,GAAG,gCAAgC,EAAC;EAClD,CAAC,MAAM;IACHH,KAAK,CAACG,IAAI,GAAE,EAAE,EAAC;EACnB;;EAEA;EACA,IAAGJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;IACpBJ,KAAK,CAACI,KAAK,GAAG,gCAAgC,EAAC;EACnD,CAAC,MAAM,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAC;IACxCJ,KAAK,CAACI,KAAK,GAAE,2BAA2B,EAAC;EAC7C,CAAC,MAAM;IACHJ,KAAK,CAACI,KAAK,GAAE,EAAE,EAAC;EACpB;;EAEA;EACA,IAAGL,MAAM,CAACO,QAAQ,KAAK,EAAE,EAAC;IACtBN,KAAK,CAACM,QAAQ,GAAE,gDAAgD,EAAC;EACrE,CAAC,MAAM,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAC;IAC9CN,KAAK,CAACM,QAAQ,GAAG,yFAAyF,EAAC;EAC/G,CAAC,MAAM;IACHN,KAAK,CAACM,QAAQ,GAAG,EAAE,EAAC;EACxB;;EACAC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC,CAAC,CAAC;EACpB,OAAOA,KAAK,CAAC,CAAC;AAClB;AAACS,EAAA,GAjCQX,UAAU;AAmCnB,eAAeA,UAAU,CAAC,CAAC;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}