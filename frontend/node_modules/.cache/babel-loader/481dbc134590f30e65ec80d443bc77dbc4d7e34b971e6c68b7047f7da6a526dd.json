{"ast":null,"code":"function Validation(values) {\n  alert(\"\");\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\n  if (values.name === \"\") {\n    error.name = \"Le champ ne doit pas être vide\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Le champ ne doit pas être vide\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Le mail ne correspond pas\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Le champ du mot de passe ne doit pas être vide\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"le mot de passe ne correspond pas\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","alert","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/frontend/src/signupValidation.js"],"sourcesContent":["function Validation(values){\n    alert(\"\")\n    let error = {\n    }\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern =  /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/\n\n\n    if(values.name === \"\") {\n        error.name = \"Le champ ne doit pas être vide\"\n    }\n\n    else{\n        error.name= \"\"\n    }\n\n\n    if(values.email === \"\") {\n        error.email = \"Le champ ne doit pas être vide\"\n    }\n\n    else if(!email_pattern.test(values.email)){\n        error.email =\"Le mail ne correspond pas\"\n\n    }else{\n        error.email= \"\"\n\n    }\n\n    if(values.password === \"\"){\n        error.password= \"Le champ du mot de passe ne doit pas être vide\"\n    }\n\n    else if(!password_pattern.test(values.password)){\n        error.password = \"le mot de passe ne correspond pas\"\n    } else {\n        error.password = \"\"\n    }\n    return error;\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvBC,KAAK,CAAC,EAAE,CAAC;EACT,IAAIC,KAAK,GAAG,CACZ,CAAC;EACD,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAI,wDAAwD;EAGlF,IAAGJ,MAAM,CAACK,IAAI,KAAK,EAAE,EAAE;IACnBH,KAAK,CAACG,IAAI,GAAG,gCAAgC;EACjD,CAAC,MAEG;IACAH,KAAK,CAACG,IAAI,GAAE,EAAE;EAClB;EAGA,IAAGL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAE;IACpBJ,KAAK,CAACI,KAAK,GAAG,gCAAgC;EAClD,CAAC,MAEI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAC;IACtCJ,KAAK,CAACI,KAAK,GAAE,2BAA2B;EAE5C,CAAC,MAAI;IACDJ,KAAK,CAACI,KAAK,GAAE,EAAE;EAEnB;EAEA,IAAGN,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAC;IACtBN,KAAK,CAACM,QAAQ,GAAE,gDAAgD;EACpE,CAAC,MAEI,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAC;IAC5CN,KAAK,CAACM,QAAQ,GAAG,mCAAmC;EACxD,CAAC,MAAM;IACHN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACvB;EACA,OAAON,KAAK;AAChB;AAACO,EAAA,GAvCQV,UAAU;AAyCnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}