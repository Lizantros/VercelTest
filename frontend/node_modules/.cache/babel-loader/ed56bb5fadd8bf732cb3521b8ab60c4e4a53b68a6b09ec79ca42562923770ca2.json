{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Forum.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forum = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    axios.get(\"/get-posts\").then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching posts\", error);\n    });\n  }, []);\n\n  // Function to submit a new post\n  const submitPost = () => {\n    // Simple front-end validation\n    if (!title || !content) {\n      setError(\"Title and content are required.\");\n      return;\n    }\n    const token = localStorage.getItem(\"token\"); // Assuming the token is stored in localStorage\n\n    axios.post(\"/create-post\", {\n      title,\n      content\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      // Clear the form\n      setTitle(\"\");\n      setContent(\"\");\n      setError(\"\");\n\n      // Add the new post to the local state to update the list\n      setPosts([...posts, response.data]);\n    }).catch(error => {\n      console.error(\"Error creating post\", error);\n      setError(\"Error creating post.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitPost,\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Forum, \"xaFZb5L84ftg5oG9LAUHQGPzfz4=\");\n_c = Forum;\nexport default Forum;\nvar _c;\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Forum","_s","posts","setPosts","title","setTitle","content","setContent","error","setError","get","then","response","data","catch","console","submitPost","token","localStorage","getItem","post","headers","Authorization","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","author","id","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Forum.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Forum = () => {\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Fetch posts when component mounts\n  useEffect(() => {\n    axios\n      .get(\"/get-posts\")\n      .then((response) => {\n        setPosts(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching posts\", error);\n      });\n  }, []);\n\n  // Function to submit a new post\n  const submitPost = () => {\n    // Simple front-end validation\n    if (!title || !content) {\n      setError(\"Title and content are required.\");\n      return;\n    }\n\n    const token = localStorage.getItem(\"token\"); // Assuming the token is stored in localStorage\n\n    axios\n      .post(\n        \"/create-post\",\n        { title, content },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        // Clear the form\n        setTitle(\"\");\n        setContent(\"\");\n        setError(\"\");\n\n        // Add the new post to the local state to update the list\n        setPosts([...posts, response.data]);\n      })\n      .catch((error) => {\n        console.error(\"Error creating post\", error);\n        setError(\"Error creating post.\");\n      });\n  };\n\n  return (\n    <div>\n      {error && <p className=\"error\">{error}</p>}\n      <div>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Title\"\n        />\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder=\"Content\"\n        />\n        <button onClick={submitPost}>Submit Post</button>\n      </div>\n      <div>\n        {posts.map((post) => (\n          <div key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <p>Posted by: {post.author}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Forum;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}