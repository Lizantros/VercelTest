{"ast":null,"code":"function Validation(values) {\n  // Create an empty object to store error messages\n  let error = {};\n\n  // Define regular expressions for email and password patterns\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\n\n  // Check if the email field is empty\n  if (values.email === \"\") {\n    error.email = \"Le champ ne doit pas être vide\";\n  }\n  // Check if the email format is valid using the email pattern regular expression\n  else if (!email_pattern.test(values.email)) {\n    error.email = \"Le mail ne correspond pas\";\n  } else {\n    // If the email is valid, set the error message to an empty string\n    error.email = \"\";\n  }\n\n  // Check if the password field is empty\n  if (values.password === \"\") {\n    error.password = \"Le champ du mot de passe ne doit pas être vide\";\n  }\n  // Check if the password format is valid using the password pattern regular expression\n  else if (!password_pattern.test(values.password)) {\n    error.password = \"le mot de passe ne correspond pas\";\n  } else {\n    // If the password is valid, set the error message to an empty string\n    error.password = \"\";\n  }\n\n  // Return the error object containing any error messages\n  return error;\n}\n\n// Export the Validation function as the default export of the module\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","email","test","password","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/LoginValidation.js"],"sourcesContent":["function Validation(values){\n    \n    // Create an empty object to store error messages\n    let error = {\n    }\n\n    // Define regular expressions for email and password patterns\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern =  /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/\n\n    // Check if the email field is empty\n    if(values.email === \"\") {\n        error.email = \"Le champ ne doit pas être vide\"\n    }\n    // Check if the email format is valid using the email pattern regular expression\n    else if(!email_pattern.test(values.email)){\n        error.email =\"Le mail ne correspond pas\"\n    }\n    else{\n        // If the email is valid, set the error message to an empty string\n        error.email= \"\"\n    }\n\n    // Check if the password field is empty\n    if(values.password === \"\"){\n        error.password= \"Le champ du mot de passe ne doit pas être vide\"\n    }\n    // Check if the password format is valid using the password pattern regular expression\n    else if(!password_pattern.test(values.password)){\n        error.password = \"le mot de passe ne correspond pas\"\n    } \n    else {\n        // If the password is valid, set the error message to an empty string\n        error.password = \"\"\n    }\n\n    // Return the error object containing any error messages\n    return error;\n}\n\n// Export the Validation function as the default export of the module\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EAEvB;EACA,IAAIC,KAAK,GAAG,CACZ,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAI,wDAAwD;;EAElF;EACA,IAAGH,MAAM,CAACI,KAAK,KAAK,EAAE,EAAE;IACpBH,KAAK,CAACG,KAAK,GAAG,gCAAgC;EAClD;EACA;EAAA,KACK,IAAG,CAACF,aAAa,CAACG,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAC;IACtCH,KAAK,CAACG,KAAK,GAAE,2BAA2B;EAC5C,CAAC,MACG;IACA;IACAH,KAAK,CAACG,KAAK,GAAE,EAAE;EACnB;;EAEA;EACA,IAAGJ,MAAM,CAACM,QAAQ,KAAK,EAAE,EAAC;IACtBL,KAAK,CAACK,QAAQ,GAAE,gDAAgD;EACpE;EACA;EAAA,KACK,IAAG,CAACH,gBAAgB,CAACE,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,EAAC;IAC5CL,KAAK,CAACK,QAAQ,GAAG,mCAAmC;EACxD,CAAC,MACI;IACD;IACAL,KAAK,CAACK,QAAQ,GAAG,EAAE;EACvB;;EAEA;EACA,OAAOL,KAAK;AAChB;;AAEA;AAAAM,EAAA,GAxCSR,UAAU;AAyCnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}