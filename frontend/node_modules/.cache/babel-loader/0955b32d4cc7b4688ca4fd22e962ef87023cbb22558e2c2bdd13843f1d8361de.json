{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(\"http://localhost:5500/user-info\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Response:\", response);\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error(\"Error fetching user info:\", error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleGw2ApiKeyChange = e => {\n    setGw2ApiKey(e.target.value);\n  };\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n\n      // Check if GW2 account name is already stored in the database\n      // If not, update it\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n\n  // Function to update GW2 account name in your database\n  const updateGw2AccountName = async gw2AccountName => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5500/update-gw2-account-name\", {\n        gw2AccountName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"GW2 account name updated successfully\");\n      // Optionally update the local state to reflect the saved GW2 account name\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n  const [image, setImage] = useState(null);\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleSubmitImage = async () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5500/upload-image\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Image uploaded successfully\");\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page de compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [userInfo.name, \" \", userInfo.gw2AccountName || gw2AccountInfo && `/ ${gw2AccountInfo.name}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your GW2 API Key\",\n        value: gw2ApiKey,\n        onChange: handleGw2ApiKeyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGw2AccountInfo,\n        children: \"Obtenir mon nom de compte joueur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(image),\n        alt: \"Account\",\n        style: {\n          borderRadius: \"50%\",\n          height: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitImage,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"42K7qQYloMY6ynLqsa9i/sPyYi0=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Account","_s","userInfo","setUserInfo","gw2ApiKey","setGw2ApiKey","gw2AccountInfo","setGw2AccountInfo","fetchUserInfo","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","error","handleGw2ApiKeyChange","e","target","value","fetchGw2AccountInfo","url","encodeURIComponent","gw2AccountName","updateGw2AccountName","name","post","image","setImage","handleImageChange","files","handleSubmitImage","formData","FormData","append","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","src","URL","createObjectURL","alt","style","borderRadius","height","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Account() {\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await axios.get(\"http://localhost:5500/user-info\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"Response:\", response);\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error(\"Error fetching user info:\", error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleGw2ApiKeyChange = (e) => {\n    setGw2ApiKey(e.target.value);\n  };\n\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(\n        gw2ApiKey\n      )}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n\n      // Check if GW2 account name is already stored in the database\n      // If not, update it\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n\n  // Function to update GW2 account name in your database\n  const updateGw2AccountName = async (gw2AccountName) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\n        \"http://localhost:5500/update-gw2-account-name\",\n        { gw2AccountName },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"GW2 account name updated successfully\");\n      // Optionally update the local state to reflect the saved GW2 account name\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n\n  const [image, setImage] = useState(null);\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleSubmitImage = async () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5500/upload-image\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      console.log(\"Image uploaded successfully\");\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Page de compte</h1>\n      <p>\n        {userInfo.name}{\" \"}\n        {userInfo.gw2AccountName ||\n          (gw2AccountInfo && `/ ${gw2AccountInfo.name}`)}\n      </p>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your GW2 API Key\"\n          value={gw2ApiKey}\n          onChange={handleGw2ApiKeyChange}\n        />\n        <button onClick={fetchGw2AccountInfo}>\n          Obtenir mon nom de compte joueur\n        </button>\n      </div>\n      <div>\n        <input type=\"file\" onChange={handleImageChange} />\n        {image && (\n          <img\n            src={URL.createObjectURL(image)}\n            alt=\"Account\"\n            style={{ borderRadius: \"50%\", height: \"20px\" }}\n          />\n        )}\n        <button onClick={handleSubmitImage}>Upload Image</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Account;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}