{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n  const [image, setImage] = useState(null);\n\n  // Define fetchUserInfoAndImage outside useEffect\n  const fetchUserInfoAndImage = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      // Fetch User Information\n      const userInfoResponse = await axios.get(\"http://localhost:5500/user-info\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserInfo(userInfoResponse.data);\n\n      // Fetch User Image\n      if (userInfoResponse.data.id) {\n        const userImageResponse = await axios.get(`http://localhost:5500/get-user-image/${userInfoResponse.data.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          responseType: 'text' // Ensure the response is treated as a text\n        });\n\n        setUserInfo({\n          ...userInfoResponse.data,\n          compteImage: `data:image/jpeg;base64,${userImageResponse.data}`\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info or image:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserInfoAndImage();\n  }, []);\n  const handleGw2ApiKeyChange = e => {\n    setGw2ApiKey(e.target.value);\n  };\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n  const updateGw2AccountName = async gw2AccountName => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5500/update-gw2-account-name\", {\n        gw2AccountName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserInfo({\n        ...userInfo,\n        gw2AccountName: gw2AccountName\n      });\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleSubmitImage = async () => {\n    const formData = new FormData();\n    formData.append('image', image); // 'image' is the name of the field expected by the server\n\n    const token = localStorage.getItem(\"token\");\n    try {\n      await axios.post(\"http://localhost:5500/upload-image\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Image uploaded successfully\");\n      fetchUserInfoAndImage(); // Refresh user info to show updated image path\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your GW2 API Key\",\n        value: gw2ApiKey,\n        onChange: handleGw2ApiKeyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGw2AccountInfo,\n        children: \"Obtenir mon nom de compte joueur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [userInfo.name, \" \", userInfo.gw2AccountName || gw2AccountInfo && `/ ${gw2AccountInfo.name}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }, this), userInfo.compteImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:5500/${userInfo.compteImage}`,\n      alt: \"User\",\n      style: {\n        height: '100px',\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitImage,\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"xIMZAU0C4DIYFzO3eL9PAI2gKaM=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Account","_s","userInfo","setUserInfo","gw2ApiKey","setGw2ApiKey","gw2AccountInfo","setGw2AccountInfo","image","setImage","fetchUserInfoAndImage","token","localStorage","getItem","userInfoResponse","get","headers","Authorization","data","id","userImageResponse","responseType","compteImage","error","console","handleGw2ApiKeyChange","e","target","value","fetchGw2AccountInfo","url","encodeURIComponent","response","gw2AccountName","updateGw2AccountName","name","post","handleImageChange","files","handleSubmitImage","formData","FormData","append","log","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","height","borderRadius","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Account() {\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n  const [image, setImage] = useState(null);\n\n  // Define fetchUserInfoAndImage outside useEffect\n  const fetchUserInfoAndImage = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      // Fetch User Information\n      const userInfoResponse = await axios.get(\"http://localhost:5500/user-info\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUserInfo(userInfoResponse.data);\n  \n      // Fetch User Image\n      if (userInfoResponse.data.id) {\n        const userImageResponse = await axios.get(`http://localhost:5500/get-user-image/${userInfoResponse.data.id}`, {\n          headers: { Authorization: `Bearer ${token}` },\n          responseType: 'text' // Ensure the response is treated as a text\n        });\n        setUserInfo({ ...userInfoResponse.data, compteImage: `data:image/jpeg;base64,${userImageResponse.data}` });\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info or image:\", error);\n    }\n  };\n  \n  useEffect(() => {\n    fetchUserInfoAndImage();\n  }, []);\n  \n\n  const handleGw2ApiKeyChange = (e) => {\n    setGw2ApiKey(e.target.value);\n  };\n\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n\n  const updateGw2AccountName = async (gw2AccountName) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\n        \"http://localhost:5500/update-gw2-account-name\",\n        { gw2AccountName },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setUserInfo({ ...userInfo, gw2AccountName: gw2AccountName });\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleSubmitImage = async () => {\n    const formData = new FormData();\n    formData.append('image', image); // 'image' is the name of the field expected by the server\n\n    const token = localStorage.getItem(\"token\");\n    try {\n        await axios.post(\"http://localhost:5500/upload-image\", formData, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n        console.log(\"Image uploaded successfully\");\n        fetchUserInfoAndImage(); // Refresh user info to show updated image path\n    } catch (error) {\n        console.error(\"Error uploading image:\", error);\n    }\n};\n\n  \n\n  return (\n    <div>\n\n     \n\n      {/* GW2 API Key Input */}\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your GW2 API Key\"\n          value={gw2ApiKey}\n          onChange={handleGw2ApiKeyChange}\n        />\n        <button onClick={fetchGw2AccountInfo}>\n          Obtenir mon nom de compte joueur\n        </button>\n      </div>\n       <p>\n        {userInfo.name}{\" \"}\n        {userInfo.gw2AccountName || (gw2AccountInfo && `/ ${gw2AccountInfo.name}`)}\n      </p>\n\n      {/* User Image Display */}\n      {userInfo.compteImage && <img src={`http://localhost:5500/${userInfo.compteImage}`} alt=\"User\" style={{ height: '100px', borderRadius: '50%' }} />\n\n\n\n}\n\n      {/* Image Upload */}\n      <div>\n        <input type=\"file\" onChange={handleImageChange} />\n        <button onClick={handleSubmitImage}>Upload Image</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}