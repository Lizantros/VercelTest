{"ast":null,"code":"function Validation(values){var error={};var email_pattern=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;var password_pattern=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d\"@$!%*?&]{8,}$/;// Check if the 'name' field is empty\nif(values.name===\"\"){error.name=\"Le champ ne doit pas être vide\";// Set an error message if it is empty\n}else{error.name=\"\";// Clear the error message if it is not empty\n}// Check if the 'email' field is empty\nif(values.email===\"\"){error.email=\"Le champ ne doit pas être vide\";// Set an error message if it is empty\n}else if(!email_pattern.test(values.email)){error.email=\"Le mail ne correspond pas\";// Set an error message if the email format is invalid\n}else{error.email=\"\";// Clear the error message if it is not empty and the format is valid\n}// Check if the 'password' field is empty\nif(values.password===\"\"){error.password=\"Le champ du mot de passe ne doit pas être vide\";// Set an error message if it is empty\n}else if(!password_pattern.test(values.password)){error.password=\"une minuscule / une majuscule / un chiffre / 8 caractères minimum / 1 caractère spécial\";// Set an error message if the password format is invalid\n}else{error.password=\"\";// Clear the error message if it is not empty and the format is valid\n}console.log(error);// Log the error object to the console for debugging purposes\nreturn error;// Return the error object\n}export default Validation;// Export the Validation function as the default export of the module","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","console","log"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/signupValidation.js"],"sourcesContent":["function Validation(values){\n    \n    let error = {\n    }\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d\"@$!%*?&]{8,}$/;\n\n    // Check if the 'name' field is empty\n    if(values.name === \"\") {\n        error.name = \"Le champ ne doit pas être vide\" // Set an error message if it is empty\n    } else {\n        error.name= \"\" // Clear the error message if it is not empty\n    }\n\n    // Check if the 'email' field is empty\n    if(values.email === \"\") {\n        error.email = \"Le champ ne doit pas être vide\" // Set an error message if it is empty\n    } else if(!email_pattern.test(values.email)){\n        error.email =\"Le mail ne correspond pas\" // Set an error message if the email format is invalid\n    } else {\n        error.email= \"\" // Clear the error message if it is not empty and the format is valid\n    }\n\n    // Check if the 'password' field is empty\n    if(values.password === \"\"){\n        error.password= \"Le champ du mot de passe ne doit pas être vide\" // Set an error message if it is empty\n    } else if(!password_pattern.test(values.password)){\n        error.password = \"une minuscule / une majuscule / un chiffre / 8 caractères minimum / 1 caractère spécial\" // Set an error message if the password format is invalid\n    } else {\n        error.password = \"\" // Clear the error message if it is not empty and the format is valid\n    }\n    console.log(error); // Log the error object to the console for debugging purposes\n    return error; // Return the error object\n}\n\nexport default Validation; // Export the Validation function as the default export of the module"],"mappings":"AAAA,QAAS,CAAAA,UAAUA,CAACC,MAAM,CAAC,CAEvB,GAAI,CAAAC,KAAK,CAAG,CACZ,CAAC,CACD,GAAM,CAAAC,aAAa,CAAG,4BAA4B,CAClD,GAAM,CAAAC,gBAAgB,CAAG,wDAAwD,CAEjF;AACA,GAAGH,MAAM,CAACI,IAAI,GAAK,EAAE,CAAE,CACnBH,KAAK,CAACG,IAAI,CAAG,gCAAgC,CAAC;AAClD,CAAC,IAAM,CACHH,KAAK,CAACG,IAAI,CAAE,EAAE,CAAC;AACnB,CAEA;AACA,GAAGJ,MAAM,CAACK,KAAK,GAAK,EAAE,CAAE,CACpBJ,KAAK,CAACI,KAAK,CAAG,gCAAgC,CAAC;AACnD,CAAC,IAAM,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,CAAC,CACxCJ,KAAK,CAACI,KAAK,CAAE,2BAA2B,CAAC;AAC7C,CAAC,IAAM,CACHJ,KAAK,CAACI,KAAK,CAAE,EAAE,CAAC;AACpB,CAEA;AACA,GAAGL,MAAM,CAACO,QAAQ,GAAK,EAAE,CAAC,CACtBN,KAAK,CAACM,QAAQ,CAAE,gDAAgD,CAAC;AACrE,CAAC,IAAM,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,CAC9CN,KAAK,CAACM,QAAQ,CAAG,yFAAyF,CAAC;AAC/G,CAAC,IAAM,CACHN,KAAK,CAACM,QAAQ,CAAG,EAAE,CAAC;AACxB,CACAC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC,CAAE;AACpB,MAAO,CAAAA,KAAK,CAAE;AAClB,CAEA,cAAe,CAAAF,UAAU,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}