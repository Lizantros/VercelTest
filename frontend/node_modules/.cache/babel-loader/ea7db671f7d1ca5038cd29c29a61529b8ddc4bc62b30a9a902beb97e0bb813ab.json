{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n\n  // Define fetchUserInfoAndImage outside useEffect\n  const fetchUserInfoAndImage = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      // Fetch User Information\n      const userInfoResponse = await axios.get(\"http://localhost:5500/user-info\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserInfo(userInfoResponse.data);\n\n      // Fetch User Image\n      if (userInfoResponse.data.id) {\n        const userImageResponse = await axios.get(`http://localhost:5500/get-user-image/${userInfoResponse.data.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          responseType: 'text' // Ensure the response is treated as a text\n        });\n\n        setUserInfo({\n          ...userInfoResponse.data,\n          compteImage: `data:image/jpeg;base64,${userImageResponse.data}`\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info or image:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserInfoAndImage();\n  }, []);\n  const handleGw2ApiKeyChange = e => {\n    setGw2ApiKey(e.target.value);\n  };\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n  const updateGw2AccountName = async gw2AccountName => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5500/update-gw2-account-name\", {\n        gw2AccountName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserInfo({\n        ...userInfo,\n        gw2AccountName: gw2AccountName\n      });\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setImage(file); // Update the image state\n      handleSubmitImage(file); // Use the file directly to submit\n    }\n  };\n\n  const handleSubmitImage = async file => {\n    const formData = new FormData();\n    formData.append('image', file); // Use the file argument\n\n    const token = localStorage.getItem(\"token\");\n    try {\n      await axios.post(\"http://localhost:5500/upload-image\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Image uploaded successfully\");\n      fetchUserInfoAndImage(); // Refresh user info to show updated image path\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n    }\n  };\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100%'\n    },\n    userImageContainer: {\n      height: '150px',\n      // Increased size\n      width: '150px',\n      borderRadius: '50%',\n      border: '3px solid red',\n      // Red border for the circle\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: '20px' // Spacing between elements\n    },\n\n    apiKeyInputContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%' // Full width for alignment\n    },\n\n    userImage: {\n      height: '100%',\n      width: '100%',\n      objectFit: 'cover'\n    },\n    imageUploadInput: {\n      opacity: 0,\n      position: 'absolute',\n      height: '100%',\n      width: '100%',\n      cursor: 'pointer'\n    },\n    apiKeyLabel: {\n      marginBottom: '10px'\n    },\n    apiKeyInput: {\n      backgroundColor: 'white',\n      border: '2px solid red',\n      borderRadius: '10px',\n      padding: '5px',\n      marginBottom: '20px' // Spacing between elements\n    },\n\n    checkButton: {\n      backgroundColor: 'white',\n      color: 'black',\n      border: '2px solid red',\n      borderRadius: '5px',\n      padding: '10px 20px',\n      cursor: 'pointer'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.userImageContainer,\n      onClick: e => {\n        e.stopPropagation(); // Stop click event from propagating\n        document.getElementById('imageUpload').click();\n      },\n      children: [userInfo.compteImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userInfo.compteImage,\n        alt: \"User\",\n        style: styles.userImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageUpload\",\n        style: styles.imageUploadInput,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [userInfo.name, \" / \", userInfo.gw2AccountName || gw2AccountInfo && gw2AccountInfo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.apiKeyInputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.apiKeyLabel,\n        children: \"Votre clef GW2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your GW2 API Key\",\n        value: gw2ApiKey,\n        onChange: handleGw2ApiKeyChange,\n        style: styles.apiKeyInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGw2AccountInfo,\n        style: styles.checkButton,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 3\n  }, this);\n}\n_s(Account, \"zaVyFStNlRm0SHs5kyfvWU/gQnk=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Account","_s","userInfo","setUserInfo","gw2ApiKey","setGw2ApiKey","gw2AccountInfo","setGw2AccountInfo","fetchUserInfoAndImage","token","localStorage","getItem","userInfoResponse","get","headers","Authorization","data","id","userImageResponse","responseType","compteImage","error","console","handleGw2ApiKeyChange","e","target","value","fetchGw2AccountInfo","url","encodeURIComponent","response","gw2AccountName","updateGw2AccountName","name","post","handleImageChange","files","file","setImage","handleSubmitImage","formData","FormData","append","log","styles","container","display","flexDirection","alignItems","justifyContent","height","width","userImageContainer","borderRadius","border","overflow","marginBottom","apiKeyInputContainer","userImage","objectFit","imageUploadInput","opacity","position","cursor","apiKeyLabel","apiKeyInput","backgroundColor","padding","checkButton","color","style","children","onClick","stopPropagation","document","getElementById","click","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Account() {\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n \n\n  // Define fetchUserInfoAndImage outside useEffect\n  const fetchUserInfoAndImage = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      // Fetch User Information\n      const userInfoResponse = await axios.get(\"http://localhost:5500/user-info\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUserInfo(userInfoResponse.data);\n  \n      // Fetch User Image\n      if (userInfoResponse.data.id) {\n        const userImageResponse = await axios.get(`http://localhost:5500/get-user-image/${userInfoResponse.data.id}`, {\n          headers: { Authorization: `Bearer ${token}` },\n          responseType: 'text' // Ensure the response is treated as a text\n        });\n        setUserInfo({ ...userInfoResponse.data, compteImage: `data:image/jpeg;base64,${userImageResponse.data}` });\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info or image:\", error);\n    }\n  };\n  \n  useEffect(() => {\n    fetchUserInfoAndImage();\n  }, []);\n  \n\n  const handleGw2ApiKeyChange = (e) => {\n    setGw2ApiKey(e.target.value);\n  };\n\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n\n  const updateGw2AccountName = async (gw2AccountName) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\n        \"http://localhost:5500/update-gw2-account-name\",\n        { gw2AccountName },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setUserInfo({ ...userInfo, gw2AccountName: gw2AccountName });\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setImage(file); // Update the image state\n      handleSubmitImage(file); // Use the file directly to submit\n    }\n  };\n\n  const handleSubmitImage = async (file) => {\n    const formData = new FormData();\n    formData.append('image', file); // Use the file argument\n\n    const token = localStorage.getItem(\"token\");\n    try {\n        await axios.post(\"http://localhost:5500/upload-image\", formData, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n        console.log(\"Image uploaded successfully\");\n        fetchUserInfoAndImage(); // Refresh user info to show updated image path\n    } catch (error) {\n        console.error(\"Error uploading image:\", error);\n    }\n  };\n\n\n  \nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    width: '100%',\n  },\n  userImageContainer: {\n    height: '150px', // Increased size\n    width: '150px',\n    borderRadius: '50%',\n    border: '3px solid red', // Red border for the circle\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: '20px', // Spacing between elements\n  },\n  apiKeyInputContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%', // Full width for alignment\n  },\n  userImage: {\n    height: '100%',\n    width: '100%',\n    objectFit: 'cover',\n  },\n  imageUploadInput: {\n    opacity: 0,\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    cursor: 'pointer',\n  },\n  apiKeyLabel: {\n    marginBottom: '10px',\n  },\n  apiKeyInput: {\n    backgroundColor: 'white',\n    border: '2px solid red',\n    borderRadius: '10px',\n    padding: '5px',\n    marginBottom: '20px', // Spacing between elements\n  },\n  checkButton: {\n    backgroundColor: 'white',\n    color: 'black',\n    border: '2px solid red',\n    borderRadius: '5px',\n    padding: '10px 20px',\n    cursor: 'pointer',\n  }\n};\n\nreturn (\n  <div style={styles.container}>\n    {/* User Image Display */}\n    <div style={styles.userImageContainer} onClick={(e) => {\n      e.stopPropagation(); // Stop click event from propagating\n      document.getElementById('imageUpload').click();\n    }}>\n      {userInfo.compteImage && (\n        <img src={userInfo.compteImage} alt=\"User\" style={styles.userImage} />\n      )}\n      <input type=\"file\" id=\"imageUpload\" style={styles.imageUploadInput} onChange={handleImageChange} />\n    </div>\n\n    {/* Account Name Display */}\n    <p>\n      {userInfo.name} / {userInfo.gw2AccountName || (gw2AccountInfo && gw2AccountInfo.name)}\n    </p>\n\n    {/* GW2 API Key Input */}\n    <div style={styles.apiKeyInputContainer}>\n      <label style={styles.apiKeyLabel}>Votre clef GW2</label>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your GW2 API Key\"\n        value={gw2ApiKey}\n        onChange={handleGw2ApiKeyChange}\n        style={styles.apiKeyInput}\n      />\n      <button onClick={fetchGw2AccountInfo} style={styles.checkButton}>\n        Check\n      </button>\n    </div>\n  </div>\n);\n}\n\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}