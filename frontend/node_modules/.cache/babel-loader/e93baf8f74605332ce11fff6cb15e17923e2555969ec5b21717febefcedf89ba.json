{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState('');\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://localhost:5500/user-info', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log('Response:', response);\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleGw2ApiKeyChange = e => {\n    setGw2ApiKey(e.target.value);\n  };\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n\n      // Check if GW2 account name is already stored in the database\n      // If not, update it\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error('Error fetching GW2 account info:', error);\n    }\n  };\n\n  // Function to update GW2 account name in your database\n  const updateGw2AccountName = async gw2AccountName => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:5500/update-gw2-account-name', {\n        gw2AccountName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('GW2 account name updated successfully');\n      // Optionally update the local state to reflect the saved GW2 account name\n    } catch (error) {\n      console.error('Error updating GW2 account name:', error);\n    }\n  };\n  const [image, setImage] = useState(null);\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleSubmitImage = async () => {\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:5500/upload-image', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Image uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: URL.createObjectURL(image),\n      alt: \"Account\",\n      style: {\n        borderRadius: '50%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitImage,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page de compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [userInfo.name, \" \", userInfo.gw2AccountName || gw2AccountInfo && `/ ${gw2AccountInfo.name}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your GW2 API Key\",\n        value: gw2ApiKey,\n        onChange: handleGw2ApiKeyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGw2AccountInfo,\n        children: \"Obtenir mon nom de compte joueur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Account, \"MjCONqbshu1+JDTABKGezIv5zIM=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Account","_s","userInfo","setUserInfo","gw2ApiKey","setGw2ApiKey","gw2AccountInfo","setGw2AccountInfo","fetchUserInfo","token","localStorage","getItem","response","get","headers","console","log","data","error","handleGw2ApiKeyChange","e","target","value","fetchGw2AccountInfo","url","encodeURIComponent","gw2AccountName","updateGw2AccountName","name","post","image","setImage","handleImageChange","files","handleSubmitImage","formData","FormData","append","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","URL","createObjectURL","alt","style","borderRadius","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\n\n\nfunction Account() {\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState('');\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://localhost:5500/user-info', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        });\n        console.log('Response:', response);\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleGw2ApiKeyChange = (e) => {\n    setGw2ApiKey(e.target.value);\n  };\n\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n  \n      // Check if GW2 account name is already stored in the database\n      // If not, update it\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error('Error fetching GW2 account info:', error);\n    }\n  };\n\n\n  // Function to update GW2 account name in your database\n  const updateGw2AccountName = async (gw2AccountName) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:5500/update-gw2-account-name', { gw2AccountName }, {\n        headers: { 'Authorization': `Bearer ${token}` }\n      });\n      console.log('GW2 account name updated successfully');\n      // Optionally update the local state to reflect the saved GW2 account name\n    } catch (error) {\n      console.error('Error updating GW2 account name:', error);\n    }\n  };\n\n\n  const [image, setImage] = useState(null);\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleSubmitImage = async () => {\n    const formData = new FormData();\n    formData.append('image', image);\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:5500/upload-image', formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Image uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  return (\n    <div>\n      {/* Autres éléments de l'interface utilisateur */}\n      <input type=\"file\" onChange={handleImageChange} />\n      {image && <img src={URL.createObjectURL(image)} alt=\"Account\" style={{ borderRadius: '50%' }} />}\n      <button onClick={handleSubmitImage}>Upload Image</button>\n    </div>\n  );\n  return (\n        <div>\n          <h1>Page de compte</h1>\n          <p>{userInfo.name} {userInfo.gw2AccountName || (gw2AccountInfo && `/ ${gw2AccountInfo.name}`)}</p>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your GW2 API Key\"\n          value={gw2ApiKey}\n          onChange={handleGw2ApiKeyChange}\n        />\n        <button onClick={fetchGw2AccountInfo}>Obtenir mon nom de compte joueur</button>\n      </div>\n    </div>\n  );\n\n  \n}\n\nexport default Account;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}