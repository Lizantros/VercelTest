{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState('');\n  const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n  const updateGw2AccountName = async gw2AccountName => {\n    try {\n      const token = localStorage.getItem('token'); // Assuming you have the token stored\n      await axios.post('http://localhost:5500/update-gw2-account-name', {\n        gw2AccountName\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('GW2 account name updated successfully');\n      // Update local state or perform additional actions as necessary\n    } catch (error) {\n      console.error('Error updating GW2 account name:', error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://localhost:5500/user-info', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // Log the response to see if data is received\n        console.log('Response:', response);\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        // Handle error (e.g., redirect to login if token is invalid)\n      }\n    };\n\n    fetchUserInfo();\n  }, []);\n  const handleGw2ApiKeyChange = e => {\n    setGw2ApiKey(e.target.value);\n  };\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      // Directly set the GW2 account info without additional manipulation\n      setGw2AccountInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching GW2 account info:', error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", userInfo.name, \" \", gw2AccountInfo && `/ ${gw2AccountInfo.name}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your GW2 API Key\",\n        value: gw2ApiKey,\n        onChange: handleGw2ApiKeyChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGw2AccountInfo,\n        children: \"Fetch GW2 Account Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"EfOlsxc/wn8mqk2joix+r82WoOo=\");\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Account","_s","userInfo","setUserInfo","gw2ApiKey","setGw2ApiKey","gw2AccountInfo","setGw2AccountInfo","updateGw2AccountName","gw2AccountName","token","localStorage","getItem","post","headers","console","log","error","fetchUserInfo","response","get","data","handleGw2ApiKeyChange","e","target","value","fetchGw2AccountInfo","url","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Account() {\n    const [userInfo, setUserInfo] = useState({});\n    const [gw2ApiKey, setGw2ApiKey] = useState('');\n    const [gw2AccountInfo, setGw2AccountInfo] = useState(null);\n\n    const updateGw2AccountName = async (gw2AccountName) => {\n        try {\n          const token = localStorage.getItem('token'); // Assuming you have the token stored\n          await axios.post('http://localhost:5500/update-gw2-account-name', { gw2AccountName }, {\n            headers: { 'Authorization': `Bearer ${token}` }\n          });\n          console.log('GW2 account name updated successfully');\n          // Update local state or perform additional actions as necessary\n        } catch (error) {\n          console.error('Error updating GW2 account name:', error);\n          // Handle error (e.g., show an error message to the user)\n        }\n      };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://localhost:5500/user-info', {\n          headers: { 'Authorization': `Bearer ${token}` }\n        });\n        \n        // Log the response to see if data is received\n        console.log('Response:', response);\n  \n        setUserInfo(response.data);\n      } catch (error) {\n        console.error('Error fetching user info:', error);\n        // Handle error (e.g., redirect to login if token is invalid)\n      }\n    };\n  \n    fetchUserInfo();\n  }, []);\n\n  const handleGw2ApiKeyChange = (e) => {\n    setGw2ApiKey(e.target.value);\n  };\n\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      // Directly set the GW2 account info without additional manipulation\n      setGw2AccountInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching GW2 account info:', error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  return (\n    <div>\n      <h1>Account Page</h1>\n      {/* Display user name and GW2 account name if available */}\n      <p>Name: {userInfo.name} {gw2AccountInfo && `/ ${gw2AccountInfo.name}`}</p>\n      \n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your GW2 API Key\"\n          value={gw2ApiKey}\n          onChange={handleGw2ApiKeyChange}\n        />\n        <button onClick={fetchGw2AccountInfo}>Fetch GW2 Account Info</button>\n      </div>\n      \n      {/* Render other information if needed */}\n    </div>\n  );\n}\n\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}