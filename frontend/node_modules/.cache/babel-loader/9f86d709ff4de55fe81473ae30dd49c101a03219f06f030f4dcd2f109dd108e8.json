{"ast":null,"code":"var _jsxFileName = \"/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport logo from \"./images/logo.svg\"; // Ensure this path is correct\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Define fetchUserInfoAndImage outside useEffect\n  const fetchUserInfoAndImage = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      // Fetch User Information\n      const userInfoResponse = await axios.get(\"http://localhost:5500/user-info\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserInfo(userInfoResponse.data);\n\n      // Fetch User Image\n      if (userInfoResponse.data.id) {\n        const userImageResponse = await axios.get(`http://localhost:5500/get-user-image/${userInfoResponse.data.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          responseType: 'text' // Ensure the response is treated as a text\n        });\n\n        setUserInfo({\n          ...userInfoResponse.data,\n          compteImage: `data:image/jpeg;base64,${userImageResponse.data}`\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info or image:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserInfoAndImage();\n  }, []);\n  const handleImageClick = () => {\n    document.getElementById('imageUpload').click();\n  };\n  const handleGw2ApiKeyChange = e => {\n    setGw2ApiKey(e.target.value);\n  };\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n  const updateGw2AccountName = async gw2AccountName => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"http://localhost:5500/update-gw2-account-name\", {\n        gw2AccountName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserInfo({\n        ...userInfo,\n        gw2AccountName: gw2AccountName\n      });\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n  const handleSubmitImage = async e => {\n    const file = e.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('image', file);\n      const token = localStorage.getItem(\"token\");\n      try {\n        await axios.post(\"http://localhost:5500/upload-image\", formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(\"Image uploaded successfully\");\n        // Fetch new image info\n        fetchUserInfoAndImage();\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      textAlign: 'center'\n    },\n    children: [userInfo.compteImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: userInfo.compteImage,\n      alt: \"User\",\n      style: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '50%'\n      },\n      onClick: () => document.getElementById('imageInput').click()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"imageInput\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleSubmitImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [userInfo.name, \" / \", userInfo.gw2AccountName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your GW2 API Key\",\n        value: gw2ApiKey,\n        onChange: e => setGw2ApiKey(e.target.value),\n        style: {\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/change-gw2-key'),\n        children: \"Change GW2 Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"kPNR/Lg4IMW9shZhypEUHTrJch0=\", false, function () {\n  return [useNavigate];\n});\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","axios","logo","useNavigate","jsxDEV","_jsxDEV","Account","_s","userInfo","setUserInfo","gw2ApiKey","setGw2ApiKey","navigate","fetchUserInfoAndImage","token","localStorage","getItem","userInfoResponse","get","headers","Authorization","data","id","userImageResponse","responseType","compteImage","error","console","handleImageClick","document","getElementById","click","handleGw2ApiKeyChange","e","target","value","fetchGw2AccountInfo","url","encodeURIComponent","response","setGw2AccountInfo","gw2AccountName","updateGw2AccountName","name","post","handleImageChange","files","setImage","handleSubmitImage","file","formData","FormData","append","log","style","display","flexDirection","alignItems","justifyContent","height","textAlign","children","src","alt","width","borderRadius","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","marginBottom","_c","$RefreshReg$"],"sources":["/Users/loicpeyramaure/Gw2 Talk/Gw2-Talk/frontend/src/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport logo from \"./images/logo.svg\"; // Ensure this path is correct\nimport { useNavigate } from 'react-router-dom';\n\nfunction Account() {\n  const [userInfo, setUserInfo] = useState({});\n  const [gw2ApiKey, setGw2ApiKey] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Define fetchUserInfoAndImage outside useEffect\n  const fetchUserInfoAndImage = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      // Fetch User Information\n      const userInfoResponse = await axios.get(\"http://localhost:5500/user-info\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUserInfo(userInfoResponse.data);\n  \n      // Fetch User Image\n      if (userInfoResponse.data.id) {\n        const userImageResponse = await axios.get(`http://localhost:5500/get-user-image/${userInfoResponse.data.id}`, {\n          headers: { Authorization: `Bearer ${token}` },\n          responseType: 'text' // Ensure the response is treated as a text\n        });\n        setUserInfo({ ...userInfoResponse.data, compteImage: `data:image/jpeg;base64,${userImageResponse.data}` });\n      }\n    } catch (error) {\n      console.error(\"Error fetching user info or image:\", error);\n    }\n  };\n  \n  useEffect(() => {\n    fetchUserInfoAndImage();\n  }, []);\n  \n  const handleImageClick = () => {\n    document.getElementById('imageUpload').click();\n};\n  const handleGw2ApiKeyChange = (e) => {\n    setGw2ApiKey(e.target.value);\n  };\n\n  const fetchGw2AccountInfo = async () => {\n    try {\n      const url = `https://api.guildwars2.com/v2/account?access_token=${encodeURIComponent(gw2ApiKey)}`;\n      const response = await axios.get(url);\n      setGw2AccountInfo(response.data);\n\n      if (!userInfo.gw2AccountName) {\n        await updateGw2AccountName(response.data.name);\n      }\n    } catch (error) {\n      console.error(\"Error fetching GW2 account info:\", error);\n    }\n  };\n\n  const updateGw2AccountName = async (gw2AccountName) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\n        \"http://localhost:5500/update-gw2-account-name\",\n        { gw2AccountName },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setUserInfo({ ...userInfo, gw2AccountName: gw2AccountName });\n    } catch (error) {\n      console.error(\"Error updating GW2 account name:\", error);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleSubmitImage = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('image', file);\n\n      const token = localStorage.getItem(\"token\");\n      try {\n        await axios.post(\"http://localhost:5500/upload-image\", formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(\"Image uploaded successfully\");\n        // Fetch new image info\n        fetchUserInfoAndImage(); \n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n      }\n    }\n  };\n\n\n  \n\n  return (\n    <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        textAlign: 'center'\n    }}>\n        {/* User Image Display */}\n        {userInfo.compteImage && (\n            <img\n                src={userInfo.compteImage}\n                alt=\"User\"\n                style={{ width: '100px', height: '100px', borderRadius: '50%' }}\n                onClick={() => document.getElementById('imageInput').click()}\n            />\n        )}\n        <input\n            type=\"file\"\n            id=\"imageInput\"\n            style={{ display: 'none' }}\n            onChange={handleSubmitImage}\n        />\n\n        <strong>\n            {userInfo.name} / {userInfo.gw2AccountName}\n        </strong>\n\n        {/* GW2 API Key Input */}\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Enter your GW2 API Key\"\n                value={gw2ApiKey}\n                onChange={(e) => setGw2ApiKey(e.target.value)}\n                style={{ marginBottom: '10px' }}\n            />\n            <button onClick={() => navigate('/change-gw2-key')}>\n                Change GW2 Key\n            </button>\n        </div>\n    </div>\n  );\n}\n\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}